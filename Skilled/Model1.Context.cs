//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Skilled
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SkladEntities1 : DbContext
    {
        public SkladEntities1()
            : base("name=SkladEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TabGrupa> TabGrupa { get; set; }
        public virtual DbSet<TabSklad> TabSklad { get; set; }
        public virtual DbSet<TabSklad_2> TabSklad_2 { get; set; }
        public virtual DbSet<TabValuta> TabValuta { get; set; }
        public virtual DbSet<TabVyrobnyk> TabVyrobnyk { get; set; }
    
        public virtual int spClearSklad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spClearSklad");
        }
    
        public virtual ObjectResult<spSkladTabRead_Result> spSkladTabRead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSkladTabRead_Result>("spSkladTabRead");
        }
    
        public virtual int spZapSklad(Nullable<int> n_pp, string grupa, string nazva, string vyrobnyk, Nullable<decimal> cina, Nullable<int> kilkist, string postach, string valuta, string sklad)
        {
            var n_ppParameter = n_pp.HasValue ?
                new ObjectParameter("N_pp", n_pp) :
                new ObjectParameter("N_pp", typeof(int));
    
            var grupaParameter = grupa != null ?
                new ObjectParameter("Grupa", grupa) :
                new ObjectParameter("Grupa", typeof(string));
    
            var nazvaParameter = nazva != null ?
                new ObjectParameter("Nazva", nazva) :
                new ObjectParameter("Nazva", typeof(string));
    
            var vyrobnykParameter = vyrobnyk != null ?
                new ObjectParameter("Vyrobnyk", vyrobnyk) :
                new ObjectParameter("Vyrobnyk", typeof(string));
    
            var cinaParameter = cina.HasValue ?
                new ObjectParameter("Cina", cina) :
                new ObjectParameter("Cina", typeof(decimal));
    
            var kilkistParameter = kilkist.HasValue ?
                new ObjectParameter("Kilkist", kilkist) :
                new ObjectParameter("Kilkist", typeof(int));
    
            var postachParameter = postach != null ?
                new ObjectParameter("Postach", postach) :
                new ObjectParameter("Postach", typeof(string));
    
            var valutaParameter = valuta != null ?
                new ObjectParameter("Valuta", valuta) :
                new ObjectParameter("Valuta", typeof(string));
    
            var skladParameter = sklad != null ?
                new ObjectParameter("Sklad", sklad) :
                new ObjectParameter("Sklad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spZapSklad", n_ppParameter, grupaParameter, nazvaParameter, vyrobnykParameter, cinaParameter, kilkistParameter, postachParameter, valutaParameter, skladParameter);
        }
    }
}
